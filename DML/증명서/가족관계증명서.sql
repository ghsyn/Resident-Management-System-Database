USE CERTIFICATE;

## 가족관계증명서

# 발급일 지정 (실제로는 의미있는 값 or 랜덤 일련번호 등 설정이 필요하다.)
SET @PRE_ID = '12345678';
SET @SUB_ID = '91011121';

# 원활한 테스트를 위한 DELETE
DELETE
FROM CERTIFICATE_ISSUE_LOG CIL
WHERE PRE_ID = @PRE_ID
  AND SUB_ID = @SUB_ID;

# 증명서 발급 로그 INSERT
INSERT INTO CERTIFICATE_ISSUE_LOG
    (PRE_ID, SUB_ID, PERSON_ID, CERTIFICATE_CODE)
VALUES ( @PRE_ID, @SUB_ID
       , (SELECT P.ID FROM PERSON P WHERE P.NAME = '남기준') # 실제로는 신청시 주민등록번호 등 기타 정보를 더 받아 해당 정보를 토대로 ID 가져오기
       , (SELECT CODE FROM CERTIFICATE_CODE CC WHERE NAME = '가족관계증명서'));

# 가족관계증명서 상단
SELECT DATE_FORMAT(CIL.DATETIME, '%Y-%m-%d') AS '발급일'
     , CONCAT(@PRE_ID, '-', @SUB_ID) AS '증명서확인번호'
     , A.ADDRESS AS '등록기준지(본적)'
FROM CERTIFICATE_ISSUE_LOG CIL
         JOIN RESIDENCE R
              ON CIL.PERSON_ID = R.PERSON_ID
         JOIN ADDRESS A
              ON A.ID = R.ADDRESS_ID
WHERE CIL.PRE_ID = @PRE_ID
  AND CIL.SUB_ID = @SUB_ID
ORDER BY R.CREATE_DATETIME DESC
LIMIT 1;

# 가족관계증명서 본문
SELECT FRC.NAME AS '구분'
     , P.NAME AS '성명'
     , CONCAT('19', SUBSTR(P.RESIDENT_REGISTRATION_NUMBER, 1, 2), '년 '
    , SUBSTR(P.RESIDENT_REGISTRATION_NUMBER, 3, 2), '월 '
    , SUBSTR(P.RESIDENT_REGISTRATION_NUMBER, 5, 2), '일') AS '출생연월일'
     , P.RESIDENT_REGISTRATION_NUMBER AS '주민등록번호'
     , GC.NAME AS 성별
FROM CERTIFICATE_ISSUE_LOG CIL
         JOIN FAMILY F
              ON CIL.PERSON_ID = F.TARGET_PERSON_ID
         JOIN PERSON P
              ON P.ID = F.PERSON_ID
         JOIN GENDER_CODE GC
              ON GC.CODE = P.GENDER_CODE
         JOIN FAMILY_RELATION_CODE FRC
              ON FRC.CODE = F.FAMILY_RELATION_CODE
WHERE CIL.PRE_ID = @PRE_ID
  AND CIL.SUB_ID = @SUB_ID
ORDER BY FRC.CODE;
